knitr::opts_chunk$set(echo = TRUE)
summary(cars)
system("portfolio-kckenneth/_build.sh")
?*
help(*)
help("*")
x = 10
mode(x)
getwd()
setwd()
setwd("~/Desktop/Machine Learning/Udemy Datascience/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing")
dataset = read.csv('Data.csv')
View(dataset)
View(dataset)
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
View(dataset)
View(dataset)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
View(dataset)
View(dataset)
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(training_set)
training_set = scale(training_set)
test_set = scale(test_set)
View(training_set)
View(training_set)
training_set[, 2:3] = scale(training_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
setwd("~/Desktop/Machine Learning/Udemy Datascience/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 4 - Simple Linear Regression")
# Simple Linear Regression
# Importing the dataset
dataset = read.csv('Salary_Data.csv')
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Simple Linear Regression to the Training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Visualising the Training set results
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
# Visualising the Test set results
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
x
x = 2
x
setwd("~/Desktop/Machine Learning/W203 Statistics/Week1/Unit 1 LS")
data = read.csv('cars.csv')
View(data)
View(data)
ls()
ls
x = 1
x
data
data$1
data[:,1]
data$mpg
data$V1
data.row.names
ts(1:10, start=1959)
ts(1:47, frequency=12, start=c(1959, 2))
x = [1, 2, 3, 4, 5]
x = c(1, 2, 3, 4, 5)
x
x[1]
x = c(3, 4, 10, 20, 30)
x[1]
x[0]
mode(x)
length(x)
min(x)
max(x)
mean(x)
median(x)
which.min(x)
which.max(x)
prod(x)
ls()
range(x)
knitr::opts_chunk$set(echo = TRUE)
data_all = read.csv('cars.csv')
data_all
ls.str(pat="data_all")
ls.str(pat="data_all")
summary(data_all$mpg)
hist(data_all$mpg)
std(data_all$mpg)
sd(data_all$mpg)
var(data_all$mpg)
mean(data_all$cyl)
View(data_all)
View(data_all)
mean(data_all$cyl, na.rm=TRUE)
View(data_all)
View(data_all)
mean(data_all$cyl, na.rm=TRUE)   # remove any NA values
length(data_all$cyl)
length(data_all$cyl, na.rm=TRUE)
dim(data_all$cyl)
nrow(data_all$cyl)
nrow(na.omit(data_all$cyl))
data = data.frame(data_all)
nrow(na.omit(data$cyl))
data = data.frame(data_all)
summary(data)
nrow(na.omit(data$cyl))
data = data.frame(data_all)
nrow(data$cyl)
data = data.frame(data_all)
nrow(na.omit(data$cyl))
data = data.frame(data_all)
nrow(na.omit(data))
data = data.frame(data_all)
nrow(na.omit(data$cyl))
nrow(na.omit(data_all$cyl))
NROW(na.omit(data_all$cyl))
x = c(2, 2, 2, 2, 2)
sd(x)
var(x)
x = c(2, 3, 4, 5, 6)
sd(x)
var(x)
clear
clear()
getwd
getwd()
library(car)
install.car
install.packages
install.packages(car)
install.packages("car")
library(car)
library("car")
install.packages("car")
getwd()
library(car)
library(car, lib.loc="/private/var/folders/n7/twwh5v3x7dn7jc1rl649knbw0000gn/T/RtmpPKLqP3/downloaded_packages")
knitr::opts_chunk$set(echo = TRUE)
library(car)
install.packages("car")
?car
install.packages("car")
?car
library(car)
install.packages('rcpp')
install.packages('Rcpp')
?car
install.packages("car")
?car
library(car)
?car
library(car)
install.packages(car)
install.packages('car')
setwd("~/203_lab_R_EDA")
knitr::opts_chunk$set(echo = TRUE,fig.width=4, fig.height=3)
# Load R library packages, R Studio would first need to have these packages installed.
library(car)
knitr::opts_chunk$set(echo = TRUE,fig.width=4, fig.height=3)
# Load R library packages, R Studio would first need to have these packages installed.
library(car)
